name: Deploy
on:
  release:
    types: [published, released]
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      env:
        type: choice
        default: homolog
        description: Environment
        options: 
          - homolog
          - sandbox

jobs:
  prepare:
    name: Prepare
    if: |
      github.actor != 'dependabot[bot]' &&
      (
        github.event_name == 'release' ||
        github.event_name == 'workflow_dispatch' ||
        (github.event_name == 'pull_request' && github.event.pull_request.merged == true &&
          (github.base_ref == 'main' && github.head_ref != 'auto-hotfix') ||
          (github.base_ref == 'prod' && github.head_ref != 'main')
        )
      )
    uses: ./.github/workflows/prepare.yml
    with:
      env: ${{ github.event.inputs.env }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Build
        id: build
        run: |
          echo "build"

  homolog:
    name: Homolog
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.homolog == 'true'
    steps:
      - name: Deploy Homolog
        id: deploy-homolog
        run: |
          echo "deploy homolog ${{ needs.prepare.outputs.tag }}"

  sandbox:
    name: Sandbox
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.sandbox == 'true'
    steps:
      - name: Deploy Sandbox
        id: deploy-sandbox
        run: |
          echo "deploy sandbox ${{ needs.prepare.outputs.tag }}"

  production:
    name: Production
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.production == 'true'
    steps:
      - name: Deploy Prod
        id: deploy-prod
        run: |
          echo "deploy prod ${{ needs.prepare.outputs.tag }}"

  after-prod-deploy:
    name: Update prod branch (prod deploy)
    runs-on: ubuntu-latest
    needs: [prepare, build, production]
    if: github.event.action == 'released'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create PR to update prod branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout production
          git pull
          git merge origin/main --ff-only
          git push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  after-hotfix:
    name: Update main branch (hotfix)
    runs-on: ubuntu-latest
    needs: [prepare, build, production]
    if: github.ref_name == 'prod'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create PR to update main branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout production
          git checkout -b auto-hotfix
          git push origin auto-hotfix
          gh pr create --title "[Hotfix] prod -> main" --body "Merges prod hotfix to main branch" --base main --head auto-hotfix --label "ðŸ”¥ Hotfix" --label "ðŸ¤– Bot"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
