name: Deploy
on:
  release:
    types: [published, released]
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      env:
        type: choice
        default: homolog
        description: Environment
        options: 
          - homolog
          - sandbox

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare:
    name: Prepare
    if: |
      github.actor != 'dependabot[bot]' &&
      (
        github.event_name == 'release' ||
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'pull_request' && github.event.pull_request.merged == true
      )
    uses: ./.github/workflows/prepare.yml
    with:
      env: ${{ github.event.inputs.env }}
      isHotfix: ${{ github.ref_name == 'main' }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Build
        id: build
        run: |
          echo "build"

  homolog:
    name: Homolog
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.homolog == 'true'
    steps:
      - name: Deploy Homolog
        id: deploy-homolog
        run: |
          echo "deploy homolog ${{ needs.prepare.outputs.tag }}"

  sandbox:
    name: Sandbox
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.sandbox == 'true'
    steps:
      - name: Deploy Sandbox
        id: deploy-sandbox
        run: |
          echo "deploy sandbox ${{ needs.prepare.outputs.tag }}"

  production:
    name: Production
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.production == 'true'
    steps:
      - name: Deploy Prod
        id: deploy-prod
        run: |
          echo "deploy prod ${{ needs.prepare.outputs.tag }}"

  after-release:
    name: Update main branch
    runs-on: ubuntu-latest
    needs: [prepare, build, production]
    if: github.event.action == 'released'
    steps:
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: Create PR to update main branch
        run: |
          git checkout main
          git merge origin/develop --ff-only
          git push

  after-hotfix:
    name: Update develop branch
    runs-on: ubuntu-latest
    needs: [prepare, build, production]
    if: github.ref_name == 'main'
    steps:
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - name: Create PR to update develop branch
        run: |
          git config --global user.name deploy-app-mago[bot]
          git config --global user.email 138800405+deploy-app-mago[bot]@users.noreply.github.com
          git checkout develop
          git merge origin/main
          if ! git push; then
            git checkout main
            git checkout -b auto-hotfix
            git push origin auto-hotfix
            gh pr create --title "[Hotfix] main -> develop" --body "Merges prod hotfix to develop branch" --base develop --head auto-hotfix --label "ðŸ”¥ Hotfix"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
