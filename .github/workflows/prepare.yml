---
  name: Deploy - Prepare
  
  on:
    workflow_call:
      inputs:
        env:
          description: "Environment to deploy by workflow dispatch"
          type: string
      outputs:
        homolog:
          description: "Boolean to activate homolog build/deploy"
          value: ${{ jobs.prepare.outputs.homolog }}
        sandbox:
          description: "Boolean to activate sandbox build/deploy"
          value: ${{ jobs.prepare.outputs.sandbox }}
        production:
          description: "Boolean to activate production build/deploy"
          value: ${{ jobs.prepare.outputs.production }}
        tag:
          description: "TAG"
          value: ${{ jobs.prepare.outputs.tag }}
  
  jobs:
    prepare:
      name: Prepare
      runs-on: ubuntu-latest
      outputs:
        homolog: ${{ steps.set-vars.outputs.homolog }}
        sandbox: ${{ steps.set-vars.outputs.sandbox }}
        production: ${{ steps.set-vars.outputs.production }}
        tag: ${{ steps.set-vars.outputs.tag }}
      steps:
        - uses: actions/checkout@v3
        - name: Set vars
          id: set-vars
          run: |
            homolog="false"
            sandbox="false"
            production="false"
            isHotFix="false"
            tag=${{ github.ref_name }}

            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              tag=${{ inputs.env }}
            fi
  
            if [[ ("${{ github.event_name }}" != "workflow_dispatch" && "${{ github.ref_name }}" == "prod") ]]; then
              isHotFix="true"

              git checkout main
              tag=$(git describe --tags --abbrev=0)
            fi
  
            if [[ ("${{ github.event_name }}" != "workflow_dispatch" && "${{ github.ref_name }}" == "main") || "${{ inputs.env }}" == "homolog" ]]; then
              homolog="true"
            fi
  
            if [[ "${{ github.event.action }}" == "published" || "${{ inputs.env }}" == "sandbox" ]]; then
              sandbox="true"
            fi
  
            if [[ ("${{ github.event.action }}" == "released" && "${{ github.event.release.prerelease }}" == "false") || $isHotFix == "true" ]]; then
              production="true"
            fi
  
            echo "homolog=$homolog" >> $GITHUB_OUTPUT
            echo "sandbox=$sandbox" >> $GITHUB_OUTPUT
            echo "production=$production" >> $GITHUB_OUTPUT
            echo "tag=$tag" >> $GITHUB_OUTPUT
  
            echo "Homolog: $homolog"
            echo "Sandbox: $sandbox"
            echo "Production: $production"
            echo "IsHotfix: $isHotFix"
            echo "Tag: $tag"
